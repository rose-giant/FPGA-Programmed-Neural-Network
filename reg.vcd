$date
	Wed Dec 20 15:07:51 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module reg_tb $end
$var wire 1 ! out $end
$var reg 1 " clk $end
$var reg 1 # in $end
$var reg 1 $ ld $end
$var reg 1 % rst $end
$scope module reg0 $end
$var wire 1 " clk $end
$var wire 1 # in $end
$var wire 1 $ ld $end
$var wire 1 % rst $end
$var wire 1 ! out $end
$var wire 4 & d [3:0] $end
$scope module s20 $end
$var wire 1 ' A0 $end
$var wire 1 $ A1 $end
$var wire 1 ( B0 $end
$var wire 1 ) B1 $end
$var wire 1 " clk $end
$var wire 1 % clr $end
$var wire 4 * d [3:0] $end
$var wire 1 + s0 $end
$var wire 1 , s1 $end
$var wire 2 - sel [1:0] $end
$var wire 1 ! out $end
$var reg 1 . r $end
$scope module dff0 $end
$var wire 1 " clk $end
$var wire 1 % clr $end
$var wire 1 . d $end
$var reg 1 ! q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x.
bx0 -
x,
0+
bx *
0)
0(
0'
bx &
x%
x$
x#
0"
x!
$end
#10
b0 -
0,
0%
0$
1"
#20
0"
#30
b0xx &
b0xx *
0!
1%
1"
#40
0"
#50
1.
0%
b11 &
b11 *
1#
1"
#60
0"
#70
1.
b1111 &
b1111 *
1!
b10 -
1,
1$
1"
#80
0"
#90
0.
b11 &
b11 *
0!
1%
1"
#100
0"
#110
0%
1"
#120
0"
